<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--配置整合Mybatis-->
    <!--1.配置数据库,${url}-->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!--2.数据库连接池c3p0-->
    <!--<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">-->
    <!--<property name="driverClass" value="${driver}"/>-->
    <!--<property name="jdbcUrl" value="${url}"/>-->
    <!--<property name="user" value="${username}"/>-->
    <!--<property name="password" value="${password}"/>-->

    <!--<property name="minPoolSize" value="10"/>-->
    <!--<property name="maxPoolSize" value="30"/>-->
    <!--&lt;!&ndash;关闭连接后不自动commit&ndash;&gt;-->
    <!--<property name="autoCommitOnClose" value="false"/>-->
    <!--&lt;!&ndash;获取连接超时时间&ndash;&gt;-->
    <!--<property name="checkoutTimeout" value="2000"/>-->
    <!--&lt;!&ndash;当获取连接失败时重试次数&ndash;&gt;-->
    <!--<property name="acquireRetryAttempts" value="2"/>-->
    <!--<property name="acquireRetryDelay" value="200"/>-->
    <!--</bean>-->
    <!--2.数据库连接池 druid-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="url" value="${url}"/>
        <property name="username" value="${username}"/>
        <property name="password" value="${password}"/>
        <property name="driverClassName" value="${driver}"/>
        <property name="maxActive" value="10"/>
        <property name="minIdle" value="5"/>
    </bean>

    <!--3.配置SqlSessionFactory对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据库连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!--配置Mybatis全局配置文件:mybatis-config.xml-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--扫描entity包 使用别名-->
        <property name="typeAliasesPackage" value="org.seckill.entiy"/>
        <!--扫描SQL配置文件:mapper需要的xml文件-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!--4.配置扫描Dao接口包,动态实现Dao接口,注入Spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--注入SqlSessionFactory,BeanName可以在DataSource加载完后-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--给出需要扫描的Dao接口包-->
        <property name="basePackage" value="org.seckill.dao"/>
    </bean>

    <!--RedisDao-->
    <bean id="redisDao" class="org.seckill.dao.cache.RedisDao">
        <constructor-arg index="0" value="localhost"/>
        <constructor-arg index="1" value="6379"/>
    </bean>
</beans>